Date=$(date '+%Y%m%d')


get_cve(){
GetUrl=$(curl -Ss https://internetdb.shodan.io/$1) 
GetIp=$(echo $GetUrl | jq -r .ip)

echo $GetUrl | jq -c "[ try.|{cve: .vulns[], ip: .ip }]" > raw/cve/$Date/cve_$GetIp.json
echo $GetUrl | jq -c "[ try.|{cpes: .cpes[], ip: .ip }]" > raw/cpes/$Date/cpes_$GetIp.json
echo $GetUrl | jq -c "[ try.|{ports: .ports[], ip: .ip }]" > raw/ports/$Date/ports_$GetIp.json
echo $GetUrl | jq -c "[ try.|{tags: .tags[], ip: .ip }]" > raw/tags/$Date/tags_$GetIp.json
echo $GetUrl | jq -c "[ try.|{hostnames: .hostnames[], ip: .ip }]" > raw/hostnames/$Date/hostnames_$GetIp.json

}

BuildSum(){
cat raw/cve/$Date/*.json | jq -sc 'flatten' > parsed/cve/$Date/cve.json
cat raw/cpes/$Date/*.json | jq -sc 'flatten' > parsed/cpes/$Date/cpes.json
cat raw/ports/$Date/*.json | jq -sc 'flatten' > parsed/ports/$Date/ports.json
cat raw/tags/$Date/*.json | jq -sc 'flatten' > parsed/tags/$Date/tags.json
cat raw/hostnames/$Date/*.json | jq -sc 'flatten' > parsed/hostnames/$Date/hostnames.json

rm -rf raw/*
clear
echo "summary has been finished"
}

GenerateFolder(){
mkdir -p raw/cve/$Date
mkdir -p raw/cpes/$Date
mkdir -p raw/ports/$Date
mkdir -p raw/tags/$Date
mkdir -p raw/hostnames/$Date

mkdir -p parsed/cve/$Date
mkdir -p parsed/cpes/$Date
mkdir -p parsed/ports/$Date
mkdir -p parsed/tags/$Date
mkdir -p parsed/hostnames/$Date
}


if [[ $1 =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
echo "generate : $1"
get_cve $1
elif  [[ $1 == "buildsum" ]]; then
BuildSum
elif  [[ $1 == "scan" && $2 =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ && $3 =~ ^[0-9]+$ ]]; then
me="$(basename "$(test -L "$0" && readlink "$0" || echo "$0")")"
ip=$(echo $2 | awk -F "." '{ print $1"."$2"."$3"." }')
seq -f "$ip%g" 0 $3  | sed "s/^/bash $me /" | sed  "1i bash $me genfolder" |sed -e '$abash '$me' buildsum' | bash
elif  [[ $1 == "clean" ]]; then
rm -rf raw
rm -rf parsed
elif  [[ $1 == "genfolder" ]]; then
GenerateFolder
else
  echo "wrong command"
fi